{"ast":null,"code":"var _jsxFileName = \"/home/jon/AppAcademy/portfolio/portfolio_1/frontend/src/components/SlotSpinner/SlotSpinner.js\",\n    _s = $RefreshSig$();\n\nimport './SlotSpinner.css';\nimport { useEffect, useState } from 'react';\nimport IconArr from './IconArr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SlotSpinner = () => {\n  _s();\n\n  const [displayIconOne, setDisplayIconOne] = useState(IconArr[Math.floor(Math.random() * 15)]);\n  const [displayIconTwo, setDisplayIconTwo] = useState(IconArr[Math.floor(Math.random() * 15)]);\n  const [displayIconThree, setDisplayIconThree] = useState(IconArr[Math.floor(Math.random() * 15)]);\n  const [rerunAnim, setRerunAnim] = useState(false);\n  const [iconElementOne, setIconElementOne] = useState( /*#__PURE__*/_jsxDEV(\"img\", {\n    id: \"spinnerIconOne\",\n    src: displayIconOne,\n    width: \"64px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 56\n  }, this));\n  const [iconElementTwo, setIconElementTwo] = useState( /*#__PURE__*/_jsxDEV(\"img\", {\n    id: \"spinnerIconTwo\",\n    src: displayIconTwo,\n    width: \"64px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 56\n  }, this));\n  const [iconElementThree, setIconElementThree] = useState( /*#__PURE__*/_jsxDEV(\"img\", {\n    id: \"spinnerIconThree\",\n    src: displayIconThree,\n    width: \"64px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 60\n  }, this));\n  const [trigger, setTrigger] = useState(false); // useEffect(() => {\n  //   const el1 = document.getElementById('el1');\n  //   const el2 = document.getElementById('el2');\n  //   const el3 = document.getElementById('el3');\n  //   el1.addEventListener('webkitAnimationEnd', (e) => {\n  //     if (e.animationName === 'spinner_end') {\n  //       const el1Timeout = setTimeout(() => {\n  //         el1.innerHTML = \"<img id='spinnerIconOne' src={displayIconOne} width='64px'/>\"\n  //         clearTimeout(el1Timeout)\n  //       }, 390)\n  //     }\n  //   });\n  //   el2.addEventListener('webkitAnimationEnd', (e) => {\n  //     if (e.animationName === 'spinner_end') {\n  //       const el2Timeout = setTimeout(() => {\n  //       el2.innerHTML = null\n  //       el2.innerHTML = \"<img id='spinnerIconTwo' src={displayIconTwo} width='64px'/>\"\n  //       clearTimeout(el2Timeout)\n  //       }, 190)\n  //     }\n  //   });\n  //   el3.addEventListener('webkitAnimationEnd', (e) => {\n  //     if (e.animationName === 'spinner_end') {\n  //       el3.innerHTML = null\n  //       el3.innerHTML = \"<img id='spinnerIconThree' src={displayIconThree} width='64px'/>\"\n  //       setTrigger(prev => !prev);\n  //     }\n  //   });\n  // },[])\n\n  useEffect(() => {\n    setRerunAnim(true);\n    console.log('running');\n    let spinnerTimeout;\n    let spinnerTimeout2;\n    let counter = 0;\n    spinnerTimeout = setInterval(() => {\n      setDisplayIconOne(IconArr[Math.floor(Math.random() * 15)]);\n      setDisplayIconTwo(IconArr[Math.floor(Math.random() * 15)]);\n      setDisplayIconThree(IconArr[Math.floor(Math.random() * 15)]);\n      counter++;\n\n      if (counter === 5) {\n        clearInterval(spinnerTimeout);\n        setRerunAnim(false); // setDisplayIcon(number);\n\n        spinnerTimeout2 = setTimeout(() => {\n          setTrigger(prev => !prev);\n          clearTimeout(spinnerTimeout2);\n        }, 1000);\n      }\n    }, 500);\n  }, [trigger]); // setBpmValue(PrizeArr[Math.floor(Math.random() * 100)]);\n  // setSpinnerTrigger(true);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"fullSpinnerRow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinnerContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bpmValueDisplaySpinner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinnerHighlight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"el1\",\n          children: rerunAnim && /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"spinnerIconOne\",\n            src: displayIconOne,\n            width: \"64px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinnerContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bpmValueDisplaySpinner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinnerHighlight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"el2\",\n          children: rerunAnim && /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"spinnerIconTwo\",\n            src: displayIconTwo,\n            width: \"64px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinnerContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bpmValueDisplaySpinner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinnerHighlight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"el3\",\n          children: rerunAnim && /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"spinnerIconThree\",\n            src: displayIconThree,\n            width: \"64px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SlotSpinner, \"UjINxSjdVXcFqC7RcXacPYgUVb0=\");\n\n_c = SlotSpinner;\nexport default SlotSpinner;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlotSpinner\");","map":{"version":3,"names":["useEffect","useState","IconArr","SlotSpinner","displayIconOne","setDisplayIconOne","Math","floor","random","displayIconTwo","setDisplayIconTwo","displayIconThree","setDisplayIconThree","rerunAnim","setRerunAnim","iconElementOne","setIconElementOne","iconElementTwo","setIconElementTwo","iconElementThree","setIconElementThree","trigger","setTrigger","console","log","spinnerTimeout","spinnerTimeout2","counter","setInterval","clearInterval","setTimeout","prev","clearTimeout"],"sources":["/home/jon/AppAcademy/portfolio/portfolio_1/frontend/src/components/SlotSpinner/SlotSpinner.js"],"sourcesContent":["import './SlotSpinner.css';\nimport { useEffect, useState } from 'react';\nimport IconArr from './IconArr';\n\n\nconst SlotSpinner = () => {\n  const [displayIconOne, setDisplayIconOne] = useState(IconArr[Math.floor(Math.random() * 15)]);\n  const [displayIconTwo, setDisplayIconTwo] = useState(IconArr[Math.floor(Math.random() * 15)]);\n  const [displayIconThree, setDisplayIconThree] = useState(IconArr[Math.floor(Math.random() * 15)]);\n  const [rerunAnim, setRerunAnim] = useState(false);\n  const [iconElementOne, setIconElementOne] = useState(<img id='spinnerIconOne' src={displayIconOne} width='64px'/>);\n  const [iconElementTwo, setIconElementTwo] = useState(<img id='spinnerIconTwo' src={displayIconTwo} width='64px'/>);\n  const [iconElementThree, setIconElementThree] = useState(<img id='spinnerIconThree' src={displayIconThree} width='64px'/>);\n  const [trigger, setTrigger] = useState(false);\n\n  // useEffect(() => {\n  //   const el1 = document.getElementById('el1');\n  //   const el2 = document.getElementById('el2');\n  //   const el3 = document.getElementById('el3');\n  //   el1.addEventListener('webkitAnimationEnd', (e) => {\n  //     if (e.animationName === 'spinner_end') {\n  //       const el1Timeout = setTimeout(() => {\n  //         el1.innerHTML = \"<img id='spinnerIconOne' src={displayIconOne} width='64px'/>\"\n  //         clearTimeout(el1Timeout)\n  //       }, 390)\n  //     }\n  //   });\n  //   el2.addEventListener('webkitAnimationEnd', (e) => {\n  //     if (e.animationName === 'spinner_end') {\n  //       const el2Timeout = setTimeout(() => {\n  //       el2.innerHTML = null\n  //       el2.innerHTML = \"<img id='spinnerIconTwo' src={displayIconTwo} width='64px'/>\"\n  //       clearTimeout(el2Timeout)\n  //       }, 190)\n  //     }\n  //   });\n  //   el3.addEventListener('webkitAnimationEnd', (e) => {\n  //     if (e.animationName === 'spinner_end') {\n  //       el3.innerHTML = null\n  //       el3.innerHTML = \"<img id='spinnerIconThree' src={displayIconThree} width='64px'/>\"\n  //       setTrigger(prev => !prev);\n  //     }\n  //   });\n  // },[])\n\n  useEffect(() => {\n    setRerunAnim(true);\n    console.log('running')\n    let spinnerTimeout\n    let spinnerTimeout2\n    let counter = 0;\n    spinnerTimeout = setInterval(()=> {\n      setDisplayIconOne(IconArr[Math.floor(Math.random() * 15)])\n      setDisplayIconTwo(IconArr[Math.floor(Math.random() * 15)])\n      setDisplayIconThree(IconArr[Math.floor(Math.random() * 15)])\n      counter++;\n      if (counter === 5) {\n        clearInterval(spinnerTimeout);\n        setRerunAnim(false);\n        // setDisplayIcon(number);\n        spinnerTimeout2 = setTimeout(() => {\n          setTrigger(prev => !prev);\n          clearTimeout(spinnerTimeout2)\n        }, 1000)\n      }\n    }, 500);\n  },[trigger])\n\n  // setBpmValue(PrizeArr[Math.floor(Math.random() * 100)]);\n  // setSpinnerTrigger(true);\n\n  return (\n    <div id='fullSpinnerRow'>\n      <div className='spinnerContainer'>\n        {/* <BpmCoin classPass={classPass}/> */}\n        <div className='bpmValueDisplaySpinner'>\n        <div className='spinnerHighlight'></div>\n          <div id='el1'>\n            {rerunAnim &&\n              <img id='spinnerIconOne' src={displayIconOne} width='64px'/>\n            }\n          </div>\n        </div>\n      </div>\n      <div className='spinnerContainer'>\n        {/* <BpmCoin classPass={classPass}/> */}\n        <div className='bpmValueDisplaySpinner'>\n        <div className='spinnerHighlight'></div>\n          <div id='el2'>\n            {rerunAnim &&\n              <img id='spinnerIconTwo' src={displayIconTwo} width='64px'/>\n            }\n          </div>\n        </div>\n      </div>\n      <div className='spinnerContainer'>\n        {/* <BpmCoin classPass={classPass}/> */}\n        <div className='bpmValueDisplaySpinner'>\n        <div className='spinnerHighlight'></div>\n          <div id='el3'>\n            {rerunAnim &&\n              <img id='spinnerIconThree' src={displayIconThree} width='64px'/>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default SlotSpinner;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}